import akka.actor.Actor._
import akka.actor._
import com.apistatsmodel.messages.APIStatsMessage
import org.joda.time.DateTime
import scala.collection.mutable.LinkedHashMap


for (i <- 1 to 10000) {

 val rnd = new scala.util.Random
 val longitudeRange = -125 to -70
 val latitudeRange = 24 to 47
 val responseTimeRange = 3 to 800
 val longitude = longitudeRange(rnd.nextInt(longitudeRange length))
 val latitude = latitudeRange(rnd.nextInt(latitudeRange length))
 val responseTime = responseTimeRange(rnd.nextInt(responseTimeRange length))
 val message = new APIStatsMessage("stress", "broadbandmap", "www.broadbandmap.gov/broadbandmap/broadband/spring2011/wireline?latitude=" + latitude + "&longitude= " + longitude + "&format=json", LinkedHashMap("geographyType" -> "block"),
          LinkedHashMap("latitude" -> latitude.toString, "longitude" -> longitude.toString, "format" -> "json"), new DateTime(), responseTime, true, "", false)

val message2 = new APIStatsMessage("stress", "broadbandmap", "www.broadbandmap.gov/broadbandmap/broadband/spring2011/wireline?latitude=" + latitude + "&longitude= " + longitude + "&format=json", LinkedHashMap("geographyType" -> "block"),
          LinkedHashMap("latitude" -> latitude.toString, "longitude" -> longitude.toString, "format" -> "json"), new DateTime(), responseTime, false, "", false)

 val statsActor = remote.actorFor("apistats-actor", "localhost", 2552)
 println("Sending message #" + i)
 Thread.sleep(5)
 statsActor ! message
 statsActor ! message2
}


